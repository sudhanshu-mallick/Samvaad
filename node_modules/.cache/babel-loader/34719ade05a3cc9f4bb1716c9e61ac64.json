{"ast":null,"code":"var _jsxFileName = \"/Users/sshekharmal/Desktop/hack-tbd/src/Components/Card.jsx\",\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../App.css\";\nimport cardComponent from \"./ActionComponents/MainPageCards/MainPageCardComponents\";\nimport { Media } from \"react-bootstrap\";\nimport user from \"../Assets/user.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlaCard() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345\n    },\n    media: {\n      height: 140\n    }\n  });\n  const [words, setWords] = useState(\"\");\n  const [cardDiv, setCardDiv] = useState(MediaCard());\n\n  function addWord(word) {\n    setWords(prev => prev + \" \" + word);\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = word.toString();\n    window.speechSynthesis.speak(speech);\n  }\n\n  function FoodCard() {\n    _s();\n\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      onClick: () => {\n        addWord(\"Food\");\n        setCardDiv(FoodCard());\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: \"https://images.ctfassets.net/hrltx12pl8hq/3MbF54EhWUhsXunc5Keueb/60774fbbff86e6bf6776f1e17a8016b4/04-nature_721703848.jpg?fit=fill&w=480&h=270\",\n          title: \"Contemplative Reptile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(FoodCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  function GetFood() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cardComponent.map((cardInfo, index) => MakeCardDivs(cardInfo, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  function MakeCardDivs(props, index) {\n    _s2();\n\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      onClick: () => {\n        // setCardDiv(GetFood());\n        addWord(\"Lizard\");\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: user,\n          title: \"Contemplative Reptile\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: props.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: props.description\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(MakeCardDivs, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  function MediaCard() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: cardComponent.map((cardInfo, index) => MakeCardDivs(cardInfo, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n  function Header(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setCardDiv(MediaCard()),\n        children: \"\\u21A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.words\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setWords(\"\"),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      words: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-space\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(FoodCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(PlaCard, \"M8+wBWhuM+35auz8vaCmvkhWcnA=\");\n\n_c = PlaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaCard\");","map":{"version":3,"sources":["/Users/sshekharmal/Desktop/hack-tbd/src/Components/Card.jsx"],"names":["React","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","cardComponent","Media","user","PlaCard","useStyles","root","maxWidth","media","height","words","setWords","cardDiv","setCardDiv","MediaCard","addWord","word","prev","speech","SpeechSynthesisUtterance","text","toString","window","speechSynthesis","speak","FoodCard","classes","GetFood","map","cardInfo","index","MakeCardDivs","props","name","description","Header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,YAAP;AACA,OAAOC,aAAP,MAA0B,yDAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA;AAAA;;AAChC,QAAMC,SAAS,GAAGZ,UAAU,CAAC;AAC3Ba,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADqB;AAI3BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH;AAJoB,GAAD,CAA5B;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAACsB,SAAS,EAAV,CAAtC;;AAEA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrBL,IAAAA,QAAQ,CAAEM,IAAD,IAAUA,IAAI,GAAG,GAAP,GAAaD,IAAxB,CAAR;AAEA,UAAME,MAAM,GAAG,IAAIC,wBAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,IAAP,GAAcJ,IAAI,CAACK,QAAL,EAAd;AACAC,IAAAA,MAAM,CAACC,eAAP,CAAuBC,KAAvB,CAA6BN,MAA7B;AACD;;AAED,WAASO,QAAT,GAAoB;AAAA;;AAClB,UAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbU,QAAAA,OAAO,CAAC,MAAD,CAAP;AACAF,QAAAA,UAAU,CAACY,QAAQ,EAAT,CAAV;AACD,OALH;AAAA,6BAOE,QAAC,cAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAEC,OAAO,CAAClB,KADrB;AAEE,UAAA,KAAK,EAAC,gJAFR;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAjD+B,KAqBvBiB,QArBuB;AAAA,YAsBdpB,SAtBc;AAAA;;AAmDhC,WAASsB,OAAT,GAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACG1B,aAAa,CAAC2B,GAAd,CAAkB,CAACC,QAAD,EAAWC,KAAX,KAAqBC,YAAY,CAACF,QAAD,EAAWC,KAAX,CAAnD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6BF,KAA7B,EAAoC;AAAA;;AAClC,UAAMJ,OAAO,GAAGrB,SAAS,EAAzB;AACA,wBACE,QAAC,IAAD;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAE,MAAM;AACb;AACAU,QAAAA,OAAO,CAAC,QAAD,CAAP;AACD,OANH;AAAA,6BAQE,QAAC,cAAD;AAAA,gCACE,QAAC,SAAD;AAEE,UAAA,SAAS,EAAEW,OAAO,CAAClB,KAFrB;AAGE,UAAA,KAAK,EAAEL,IAHT;AAIE,UAAA,KAAK,EAAC;AAJR,WACO2B,KADP;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAwB,YAAA,YAAY,MAApC;AAAqC,YAAA,OAAO,EAAC,IAA7C;AAAkD,YAAA,SAAS,EAAC,IAA5D;AAAA,sBACGE,KAAK,CAACC;AADT,aAAiBH,KAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAEE,YAAA,OAAO,EAAC,OAFV;AAGE,YAAA,KAAK,EAAC,eAHR;AAIE,YAAA,SAAS,EAAC,GAJZ;AAAA,sBAMGE,KAAK,CAACE;AANT,aACOJ,KADP;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,SAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AARF,OACOA,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AA7F+B,MA2DvBC,YA3DuB;AAAA,YA4Dd1B,SA5Dc;AAAA;;AA+FhC,WAASS,SAAT,GAAqB;AACnB,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGb,aAAa,CAAC2B,GAAd,CAAkB,CAACC,QAAD,EAAWC,KAAX,KAAqBC,YAAY,CAACF,QAAD,EAAWC,KAAX,CAAnD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,WAASK,MAAT,CAAgBH,KAAhB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAMnB,UAAU,CAACC,SAAS,EAAV,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMkB,KAAK,CAACtB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IArIuBN,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../App.css\";\nimport cardComponent from \"./ActionComponents/MainPageCards/MainPageCardComponents\";\nimport { Media } from \"react-bootstrap\";\nimport user from \"../Assets/user.png\";\n\nexport default function PlaCard() {\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\n  const [words, setWords] = useState(\"\");\n  const [cardDiv, setCardDiv] = useState(MediaCard());\n\n  function addWord(word) {\n    setWords((prev) => prev + \" \" + word);\n\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = word.toString();\n    window.speechSynthesis.speak(speech);\n  }\n\n  function FoodCard() {\n    const classes = useStyles();\n    return (\n      <Card\n        className=\"card\"\n        onClick={() => {\n          addWord(\"Food\");\n          setCardDiv(FoodCard());\n        }}\n      >\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image=\"https://images.ctfassets.net/hrltx12pl8hq/3MbF54EhWUhsXunc5Keueb/60774fbbff86e6bf6776f1e17a8016b4/04-nature_721703848.jpg?fit=fill&w=480&h=270\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Food\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    );\n  }\n\n  function GetFood() {\n    return (\n      <div className=\"card-container\">\n        {cardComponent.map((cardInfo, index) => MakeCardDivs(cardInfo, index))}\n      </div>\n    );\n  }\n\n  function MakeCardDivs(props, index) {\n    const classes = useStyles();\n    return (\n      <Card\n        key={index}\n        className=\"card\"\n        onClick={() => {\n          // setCardDiv(GetFood());\n          addWord(\"Lizard\");\n        }}\n      >\n        <CardActionArea key={index}>\n          <CardMedia\n            key={index}\n            className={classes.media}\n            image={user}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent key={index}>\n            <Typography key={index} gutterBottom variant=\"h5\" component=\"h2\">\n              {props.name}\n            </Typography>\n            <Typography\n              key={index}\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n            >\n              {props.description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    );\n  }\n\n  function MediaCard() {\n    return (\n      <div className=\"card-container\">\n        {cardComponent.map((cardInfo, index) => MakeCardDivs(cardInfo, index))}\n      </div>\n    );\n  }\n\n  function Header(props) {\n    return (\n      <div className=\"header\">\n        <button className=\"cancel\" onClick={() => setCardDiv(MediaCard())}>\n          ↩\n        </button>\n        <div className=\"textHeader\">\n          <br />\n          <br />\n          <div>{props.words}</div>\n          <br />\n          <br />\n        </div>\n        <button className=\"cancel\" onClick={() => setWords(\"\")}>\n          X\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Header words={words} />\n      <div className=\"card-space\">\n        <div className=\"card-container\">\n          <FoodCard />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}