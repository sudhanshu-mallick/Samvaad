{"ast":null,"code":"var _jsxFileName = \"/Users/sshekharmal/Desktop/hack-tbd/src/Components/ChatBot/demo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport chatbot from \"../../Assets/chatbot.png\";\nimport user from \"../../Assets/user.png\";\nimport \"../ChatBot/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Demo() {\n  _s();\n\n  const [divText, setDivText] = useState();\n  var SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n\n  function showUserMessage(userMessage) {\n    const output = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatarea-inner user\",\n      children: userMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 20\n    }, this);\n\n    setDivText(prev => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prev, output]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this));\n  }\n\n  function showBotMessage(botMessage) {\n    const output = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatarea-inner chatbot\",\n      children: botMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this);\n\n    setDivText(prev => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prev, output]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this));\n  }\n\n  function chatBotVoice(message) {\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = \"This is test message.\";\n    if (message.includes(\"who are you\")) speech.text = \"I am a bot\";\n    window.speechSynthesis.speak(speech);\n    showBotMessage(speech.text);\n  }\n\n  recognition.onresult = function (e) {\n    let resultIndex = e.resultIndex;\n    let transcript = e.results[resultIndex][0].transcript;\n    showUserMessage(transcript);\n    chatBotVoice(transcript);\n    console.log(transcript);\n  };\n\n  function clickIt() {\n    recognition.start();\n    console.log(\"Activated\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Chat with Chitti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-area\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatarea-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatarea-outer\",\n          children: divText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-area\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chatbot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mic\",\n        onClick: clickIt,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"flaticon-microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Demo, \"yVs+DHkYG5PddI8FKYlQWsUSJ+Y=\");\n\n_c = Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/Users/sshekharmal/Desktop/hack-tbd/src/Components/ChatBot/demo.jsx"],"names":["React","useState","chatbot","user","Demo","divText","setDivText","SpeechRecognition","window","webkitSpeechRecognition","recognition","showUserMessage","userMessage","output","prev","showBotMessage","botMessage","chatBotVoice","message","speech","SpeechSynthesisUtterance","text","includes","speechSynthesis","speak","onresult","e","resultIndex","transcript","results","console","log","clickIt","start"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport chatbot from \"../../Assets/chatbot.png\";\nimport user from \"../../Assets/user.png\";\nimport \"../ChatBot/styles.css\";\n\nexport default function Demo() {\n  const [divText, setDivText] = useState();\n\n  var SpeechRecognition =\n    window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n\n  function showUserMessage(userMessage) {\n    const output = <div className=\"chatarea-inner user\">{userMessage}</div>;\n    setDivText((prev) => (\n      <div>\n        {prev}\n        {output}\n      </div>\n    ));\n  }\n\n  function showBotMessage(botMessage) {\n    const output = <div className=\"chatarea-inner chatbot\">{botMessage}</div>;\n    setDivText((prev) => (\n      <div>\n        {prev}\n        {output}\n      </div>\n    ));\n  }\n\n  function chatBotVoice(message) {\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = \"This is test message.\";\n\n    if (message.includes(\"who are you\")) speech.text = \"I am a bot\";\n\n    window.speechSynthesis.speak(speech);\n    showBotMessage(speech.text);\n  }\n\n  recognition.onresult = function (e) {\n    let resultIndex = e.resultIndex;\n    let transcript = e.results[resultIndex][0].transcript;\n    showUserMessage(transcript);\n    chatBotVoice(transcript);\n    console.log(transcript);\n  };\n\n  function clickIt() {\n    recognition.start();\n    console.log(\"Activated\");\n  }\n\n  return (\n    <div>\n      {\" \"}\n      <header>Chat with Chitti</header>\n      <div className=\"main\">\n        <div className=\"user-area\">\n          <img src={user} />\n        </div>\n        <div className=\"chatarea-main\">\n          <div className=\"chatarea-outer\">{divText}</div>\n        </div>\n        <div className=\"chatbot-area\">\n          <img src={chatbot} />\n        </div>\n        <button id=\"mic\" onClick={clickIt}>\n          <i className=\"flaticon-microphone\"></i>\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}