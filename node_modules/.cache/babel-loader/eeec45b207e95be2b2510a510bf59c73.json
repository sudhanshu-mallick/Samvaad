{"ast":null,"code":"var _jsxFileName = \"/Users/sshekharmal/Desktop/hack-tbd/src/Components/ActionComponents/People/PeopleCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../../../App.css\";\nimport people from \"./PeopleComponents\";\nimport brother from \"./brother.svg\";\nimport call from \"../../../../../hack-tbd/src/Components/ActionComponents/People/call.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PeopleCard() {\n  _s();\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345\n    },\n    media: {\n      height: 140\n    }\n  });\n  const classes = useStyles();\n  const [words, setWords] = useState(\"\");\n\n  function addWord(word) {\n    setWords(prev => prev + \" \" + word);\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = word.toString();\n    window.speechSynthesis.speak(speech);\n  }\n\n  function MakeCardDiv(cardProp, index) {\n    const location = \"hack-tbd/src/Components/ActionComponents/People/call.png\";\n    console.log(\"URL : \" + location);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        addWord(cardProp.name);\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            className: classes.media,\n            image: require(location + \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              children: cardProp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"p\",\n              children: \"this is a short description.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  function PeopleCard() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: people.map((cardInfo, index) => MakeCardDiv(cardInfo, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  function Header(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.words\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: () => setWords(\"\"),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      words: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-space\",\n      children: /*#__PURE__*/_jsxDEV(PeopleCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PeopleCard, \"Jk/Jkl/B+WZ1NbXzly7wtLYGJms=\", true);\n\n_c = PeopleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleCard\");","map":{"version":3,"sources":["/Users/sshekharmal/Desktop/hack-tbd/src/Components/ActionComponents/People/PeopleCard.jsx"],"names":["React","useState","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","people","call","PeopleCard","useStyles","root","maxWidth","media","height","classes","words","setWords","addWord","word","prev","speech","SpeechSynthesisUtterance","text","toString","window","speechSynthesis","speak","MakeCardDiv","cardProp","index","location","console","log","name","require","map","cardInfo","Header","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../../../App.css\";\nimport people from \"./PeopleComponents\";\nimport brother from \"./brother.svg\";\nimport call from \"../../../../../hack-tbd/src/Components/ActionComponents/People/call.png\";\n\nexport default function PeopleCard() {\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\n  const classes = useStyles();\n  const [words, setWords] = useState(\"\");\n\n  function addWord(word) {\n    setWords((prev) => prev + \" \" + word);\n\n    const speech = new SpeechSynthesisUtterance();\n    speech.text = word.toString();\n    window.speechSynthesis.speak(speech);\n  }\n\n  function MakeCardDiv(cardProp, index) {\n    const location = \"hack-tbd/src/Components/ActionComponents/People/call.png\";\n\n    console.log(\"URL : \" + location);\n\n    return (\n      <div\n        onClick={() => {\n          addWord(cardProp.name);\n        }}\n      >\n        <Card className=\"card\">\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={require(location + \"\")}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {cardProp.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                this is a short description.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    );\n  }\n\n  function PeopleCard() {\n    return (\n      <div className=\"card-container\">\n        {people.map((cardInfo, index) => MakeCardDiv(cardInfo, index))}\n      </div>\n    );\n  }\n\n  function Header(props) {\n    return (\n      <div className=\"header\">\n        <div className=\"textHeader\">\n          <br />\n          <br />\n          <div>{props.words}</div>\n          <br />\n          <br />\n        </div>\n        <button className=\"cancel\" onClick={() => setWords(\"\")}>\n          X\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Header words={words} />\n      <div className=\"card-space\">\n        <PeopleCard />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}